"""
Django settings for helloword project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
print('basedir', BASE_DIR)
SESSION_COOKIE_AGE = 60 * 1
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'e#q257z0!rpn!4y$dh*77_-=1874*&diy7f=r@g1e4qm75p#q!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app1.apps.App1Config',
    'juheapp.apps.JuheappConfig',
    # 'django_crontab'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'mymiddleware.mymiddleware.TestMiddle',
    'mymiddleware.mymiddleware.StatisticsMiddle',
]

ROOT_URLCONF = 'helloword.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'helloword.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     },
#     'slave': {
#         'ENGINE':'django.db.backends.mysql',
#         'NAME':'user_dj',
#         'USER':'root',
#         'PASSWORD':'wodeniang71md',
#         'HOST':'127.0.0.1',
#         'PORT':'3306',
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'user_dj',
        'USER': 'root',
        'PASSWORD': 'wodeniang71md',
        'HOST': '127.0.0.1',
        'PORT': '3306',
    },
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/
# 语言设置
LANGUAGE_CODE = 'zh-Hans'
# 时间设置
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

BASE_DIR = 'D:\pychar\Djangostudy\helloword\\'
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            # 'format': '[%(asctime)s] [%(levelname)s] %(message)s',
            'format': '%(asctime)s, [%(threadName)s: %(thread)d]'
                      '%(pathname)s, %(funcName)s, %(lineno)d, %(levelname)s %(message)s'
        },
        'statistics': {
            'format': '%(asctime)s,%(lineno)d, %(levelname)s %(message)s'
        }
    },
    # 'filters': {
    #     'test': {
    #         "()": 'ops.TestFilter'
    #     }
    # },
    'handlers': {
        'console': {
            # 'level': 'INFO',
            # 'class': 'logging.StreamHandler',
            # 'formatter': 'verbose'
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
        'file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'logs.log'),
            'maxBytes': 1024 * 1024 * 1024,
            'backupCount': 1,
            'formatter': 'verbose',
            'encoding': 'utf-8'
            # 'level': 'INFO',
            # 'class': 'logging.FileHandler',
            # 'filename': os.path.join(BASE_DIR, 'logs.log'),
            # 'formatter': 'verbose'
        },
        'statistics': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'statistics.log'),
            'maxBytes': 1024 * 1024 * 5,
            'backupCount': 1,
            'formatter': 'statistics',
            'encoding': 'utf-8'
            # 'level': 'INFO',
            # 'class': 'logging.FileHandler',
            # 'filename': os.path.join(BASE_DIR, 'logs.log'),
            # 'formatter': 'verbose'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            # 'filters': ['test'],
            'level': 'INFO',
            'propagate': True,
        },
        'statistics': {
            'handlers': ['statistics'],
            'level': 'DEBUG'
        }
    }
}

CACHES = {
    'default': {
        # 1. MemCache
        # 'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        # 'LOCATION': '127.0.0.1:11211',

        # 2. DB Cache
        # 'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        # 'LOCATION': 'my_cache_table',

        # 3. Filesystem Cache
        # 'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        # 'LOCATION': '/var/tmp/django_cache',

        # 4. Local Mem Cache
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'backend-cache'
    }
}

CRONJOBS = [
    ('*/2 * * * *', 'cron.jobs.dome')
]

# Email config
# QQ邮箱 SMTP 服务器地址
EMAIL_HOST = 'smtp.qq.com'
# 端口  附加码25
EMAIL_PORT = 465
# 发送邮件的邮箱
EMAIL_HOST_USER = '1977681614@qq.com'
# 在邮箱中设置的客户端授INSTALLED_APPS权密码
EMAIL_HOST_PASSWORD = 'yvjrdtzchuqmbfje'
# 开启TLS
EMAIL_USE_TLS = True
# 收件人看到的发件人
EMAIL_FROM = '1977681614@qq.com'